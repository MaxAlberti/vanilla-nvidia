base: ghcr.io/vanilla-os/desktop:main
name: Vanilla Desktop Nvidia
id: vanilla-nvidia
labels:
  maintainer: self-maintained
args:
  DEBIAN_FRONTEND: noninteractive

modules:
- name: init-setup
  type: shell
  commands:
  - lpkg --unlock
  - apt-get update

# Put your custom actions behind this comment

# - Download debs
- name: install-cuda-repo
  type: shell
  commands:
  - wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda-repo-debian11-11-8-local_11.8.0-520.61.05-1_amd64.deb -nv -P /deb-pkgs

# - Install debs
- name: install-debs
  type: includes
  includes:
    - modules/50-install-debs

# - Install CUDA
- name: install-cuda-repo
  type: shell
  commands:
  - echo "Installing CUDA..."
  - cp /var/cuda-repo-debian11-11-8-local/cuda-*-keyring.gpg /usr/share/keyrings/
  - add-apt-repository contrib
  - apt-get update
- name: install-cuda
  type: apt
  source:
    packages:
    - cuda

# - Set Image Name
- name: set-image-name
  type: includes
  includes:
    - modules/80-set-image-abroot-config

# - DELME
#- name: example-packages
#  type: apt
#  source:
#    packages:
#    - vim

#- name: example-commands
#  type: shell
#  commands:
#  - echo Example output

#- name: package-modules
#  type: includes
#  includes:
#    - modules/50-install-debs
#    - modules/80-set-image-abroot-config

# Put your custom actions before this comment

- name: cleanup
  type: shell
  commands:
  - apt-get autoremove -y
  - apt-get clean
  - lpkg --lock

- name: fsguard
  type: fsguard
  CustomFsGuard: false
  FsGuardLocation: "/usr/sbin/FsGuard"
  GenerateKey: true
  FilelistPaths: ["/usr/bin"]
  modules:
    - name: remove-prev-fsguard
      type: shell
      commands:
        - rm -rf /FsGuard 
        - rm -f ./minisign.pub ./minisign.key 
        - chmod +x /usr/sbin/init

- name: cleanup2
  type: shell
  commands:
    - rm -rf /tmp/*
    - rm -rf /var/tmp/*
    - rm -rf /sources
